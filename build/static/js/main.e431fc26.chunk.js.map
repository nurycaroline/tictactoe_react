{"version":3,"sources":["components/Header.js","components/Question.js","components/BoardGame.js","components/Points.js","components/Board.js","components/App.js","registerServiceWorker.js","index.js","assets/188169.svg"],"names":["Header","className","src","logoImg","alt","Question","props","changeStatePlayer","optionPlayer","setState","player","letter","changeStateLetter","optionLetter","state","handleClick","this","onClick","Component","Board","selectPlayer","verifyWinner","turnChange","block","playComputer","imageLetter","clickRow","position","playOne","turn","letterPlayOne","letterPlayTwo","qtdJogadas","cleaBoard","pos11","pos12","pos13","pos21","pos22","pos23","pos31","pos32","pos33","verifyLines","verifyColumn","verifyDiagonal","hasWinner","setPoints","openModalWinner","mensagemModalWinner","line","Math","floor","random","column","setTimeout","playTwo","Points","pointsPlayOne","pointsPlayTwo","points","options","turnClass","Object","keys","length","window","location","reload","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.e431fc26.chunk.js","sourcesContent":["import React from \"react\";\nimport logoImg from \"../assets/188169.svg\";\n\nexport const Header = () => {\n  return (\n    <div className=\"header\">\n      <img className=\"imageLogo\" src={logoImg} alt=\"Tic Tac Toe\" />\n      <div className=\"title\">\n        <span className=\"red\"> TIC </span>\n        <span className=\"grey\"> TAC </span>\n        <span className=\"blue\"> TOE </span>\n      </div>\n    </div>\n  );\n};\n","import React, {Component } from  \"react\";\n\nexport default class Question extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayer: true, \n\t\t\toptionPlayer: \"\",\n\t\t\tletter: false,\n\t\t\toptionLetter: \"\"\n\t\t}\n\t}\n\n\tchangeStatePlayer = (optionPlayer) => {\n\t\tthis.setState({\n\t\t\tplayer: false,\n\t\t\toptionPlayer: optionPlayer,\n\t\t\tletter: true\n\t\t})\n\t}\n\n\tchangeStateLetter = (optionLetter) => {\n\t\tlet {optionPlayer} = this.state;\n\t\tthis.props.handleClick({\n\t\t\toptionPlayer, optionLetter\n\t\t})\n\t}\n\t\n\trender() {\n\t\tlet {player, letter} = this.state;\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tplayer ?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1 className='title grey'>How do you want to play?</h1>\n\t\t\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t\t\t<button onClick={() => this.changeStatePlayer(\"ONEPLAYER\")} className='button b-red'>ONE PLAYER</button>\n\t\t\t\t\t\t\t\t<button onClick={() => this.changeStatePlayer(\"TWOPLAYER\")} className='button b-blue'>TWO PLAYER</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: letter ? \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1 className='title grey'>Would you like to be X or O?</h1>\n\t\t\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t\t\t<button onClick={() => this.changeStateLetter(\"X\")} className='button b-red'>X</button>\n\t\t\t\t\t\t\t\t<button onClick={() => this.changeStateLetter(\"O\")} className='button b-blue'>O</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from \"react\";\n\nexport default class Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      turn: \"X\",\n\n      pos11: \"\",\n      pos12: \"\",\n      pos13: \"\",\n      pos21: \"\",\n      pos22: \"\",\n      pos23: \"\",\n      pos31: \"\",\n      pos32: \"\",\n      pos33: \"\",\n\n      playOne: true,\n      playTwo: false,\n\n      block: false,\n      openModalWinner: false,\n      mensagemModalWinner: \"\",\n      qtdJogadas: 0\n    };\n  }\n\n  selectPlayer = () => {\n    if (!this.verifyWinner()) {\n      this.props.turnChange();\n\n      if (this.props.optionPlayer === \"ONEPLAYER\") {\n        this.setState({ block: true });\n        this.playComputer();\n      }\n    }\n  };\n\n  imageLetter = (letter) => {\n    if (letter === \"X\"){\n      return \"X\"\n    }else if (letter === \"O\") {\n      return \"O\"\n    }\n  }\n\n  clickRow = position => {\n    if (!this.state[position]) {\n      let { playOne } = this.props.turn;\n      let { letterPlayOne, letterPlayTwo } = this.props;\n\n      this.setState(\n        {\n          [position]: playOne ? this.imageLetter(letterPlayOne) : this.imageLetter(letterPlayTwo),\n          qtdJogadas: this.state.qtdJogadas + 1\n        },\n        this.selectPlayer\n      );\n    }\n  };\n\n  cleaBoard = () => {\n    this.setState({\n      pos11: \"\",\n      pos12: \"\",\n      pos13: \"\",\n      pos21: \"\",\n      pos22: \"\",\n      pos23: \"\",\n      pos31: \"\",\n      pos32: \"\",\n      pos33: \"\",\n      qtdJogadas: 0\n    });\n  };\n\n  verifyLines = (letter) => {\n    let {pos11, pos12, pos13, pos21, pos22, pos23, pos31, pos32, pos33} = this.state;\n    if (\n      (pos11 === letter && pos12 === letter && pos13 === letter) ||\n      (pos21 === letter && pos22 === letter && pos23 === letter) ||\n      (pos31 === letter && pos32 === letter && pos33 === letter)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  verifyColumn = (letter) => {\n    let {pos11, pos12, pos13, pos21, pos22, pos23, pos31, pos32, pos33} = this.state;\n    if (\n      (pos11 === letter && pos21 === letter && pos31 === letter) ||\n      (pos12 === letter && pos22 === letter && pos32 === letter) ||\n      (pos13 === letter && pos23 === letter && pos33 === letter)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  verifyDiagonal = (letter) => {\n    let {\n      pos11,\n      pos13,\n      pos22,\n      pos31,\n      pos33\n    } = this.state;\n    if (\n      (pos11 === letter && pos22 === letter && pos33 === letter) ||\n      (pos13 === letter && pos22 === letter && pos31 === letter)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  verifyWinner = () => {\n    let { playOne } = this.props.turn;\n    let { letterPlayOne, letterPlayTwo } = this.props;\n    let letter = playOne ? letterPlayOne : letterPlayTwo;\n    let hasWinner = false;\n    let {\n      qtdJogadas\n    } = this.state;\n\n    if (this.verifyLines(letter) || this.verifyColumn(letter) || this.verifyDiagonal(letter)) {\n      hasWinner = true;\n    }\n\n    if (hasWinner) {\n      this.props.setPoints(playOne ? \"ONEPLAYER\" : \"TWOPLAYER\");\n      this.cleaBoard();\n      this.setState({\n        openModalWinner: true,\n        mensagemModalWinner: `${playOne ? \"ONEPLAYER\" : \"TWOPLAYER\"}, YOU WIN !`\n      });\n      return true;\n    }\n\n    if (qtdJogadas === 9 && !hasWinner) {\n      this.setState({\n        openModalWinner: true,\n        mensagemModalWinner: `Empate !`\n      });\n      this.cleaBoard();\n    }\n\n    return false;\n  };\n\n  playComputer = () => {\n    let line = Math.floor(Math.random() * 3 + 1);\n    let column = Math.floor(Math.random() * 3 + 1);\n    let position = `pos${line}${column}`;\n    let positionValue = this.state[position];\n\n    if (!positionValue) {\n      setTimeout(() => {\n        let { letterPlayTwo } = this.props;\n        this.setState({ [position]: this.imageLetter(letterPlayTwo), block: false }, () => {\n          this.verifyWinner();\n          this.props.turnChange();\n        });\n      }, 1000);\n    } else {\n      this.playComputer();\n    }\n  };\n\n  render() {\n    let {\n      pos11,\n      pos12,\n      pos13,\n      pos21,\n      pos22,\n      pos23,\n      pos31,\n      pos32,\n      pos33,\n      block,\n      openModalWinner,\n      mensagemModalWinner\n    } = this.state;\n\n    return (\n      <div>\n        <div className=\"row row-one\">\n          <div className={`one ${pos11}`} onClick={() => this.clickRow(\"pos11\")}>\n            {pos11}\n          </div>\n          <div className={`two ${pos12}`} onClick={() => this.clickRow(\"pos12\")}>\n            {pos12}\n          </div>\n          <div className={`three ${pos13}`} onClick={() => this.clickRow(\"pos13\")}>\n            {pos13}\n          </div>\n        </div>\n        <div className=\"row row-two\">\n          <div className={`one ${pos21}`} onClick={() => this.clickRow(\"pos21\")}>\n            {pos21}\n          </div>\n          <div className={`two ${pos22}`} onClick={() => this.clickRow(\"pos22\")}>\n            {pos22}\n          </div>\n          <div className={`three ${pos23}`} onClick={() => this.clickRow(\"pos23\")}>\n            {pos23}\n          </div>\n        </div>\n        <div className=\"row row-three\">\n          <div className={`one ${pos31}`} onClick={() => this.clickRow(\"pos31\")}>\n            {pos31}\n          </div>\n          <div className={`two ${pos32}`} onClick={() => this.clickRow(\"pos32\")}>\n            {pos32}\n          </div>\n          <div className={`three ${pos33}`} onClick={() => this.clickRow(\"pos33\")}>\n            {pos33}\n          </div>\n        </div>\n\n        {block && <div className={`block`}>Thinking...</div>}\n\n        {openModalWinner && (\n          <div className=\"modal\">\n            <div className=\"content\">\n              <h1>{mensagemModalWinner}</h1>\n              <button\n                className=\"next\"\n                onClick={() => this.setState({ openModalWinner: false })}\n              >\n                NEXT GAME\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst Points = ({pointsPlayOne, pointsPlayTwo}) => \n<div className=\"points\">\n  <div className=\"point first\">\n    Play One: {pointsPlayOne}\n  </div>\n  |\n  <div className=\"point last\">\n    Play Two: {pointsPlayTwo}\n  </div>\n</div>;\n\nexport default Points;","import React, { Component } from \"react\";\nimport Question from \"./Question\";\nimport BoardGame from \"./BoardGame\";\nimport Points from \"./Points\";\n\nexport default class Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {},\n      points: {\n        playOne: 0,\n        playTwo: 0\n      },\n      turn: {\n        playOne: true,\n        playTwo: false\n      }\n    };\n  }\n\n  setPoints = (player) => {\n    let { playOne, playTwo } = this.state.points;\n    playOne = player === \"ONEPLAYER\" ? playOne + 1 : playOne;\n    playTwo = player === \"TWOPLAYER\" ? playTwo + 1 : playTwo;\n    this.setState({points: {playOne, playTwo}})\n  }\n\n  handleClick = options => {\n    this.setState({ options: options });\n  };\n\n  turnChange = () => {\n\t\tlet { playOne, playTwo } = this.state.turn;\n\t\t\n    this.setState({\n\t\t\tturn: {\n\t\t\t\tplayOne: !playOne,\n        playTwo: !playTwo\n      }\n    });\n  };\n\n  render() {\n    let { options, points, turn } = this.state;\n    let turnClass =\n      Object.keys(options).length > 0\n        ? `turn turn-${turn.playOne ? \"red\" : \"blue\"}`\n        : \"\";\n\n    return (\n      <div>\n        {Object.keys(options).length > 0 && (\n          <div className={`legenda-${turn.playOne ? \"red\" : \"blue\"}`}>\n            {turn.playOne ? \"Player one\" : \"Player Two\"}\n          </div>\n        )}\n        <div className={`board ${turnClass}`}>\n          {Object.keys(options).length === 0 ? (\n            <Question handleClick={this.handleClick} />\n          ) : (\n            <div>\n              <div className=\"header-board\">\n                <button onClick={() => window.location.reload() }>Reset</button>\n                <Points\n                  pointsPlayOne={points.playOne}\n                  pointsPlayTwo={points.playTwo}\n                />\n              </div>\n              <BoardGame\n                turn={turn}\n\t\t\t\t\t\t\t\toptionPlayer={options.optionPlayer}\n                turnChange={() => this.turnChange()}\n                letterPlayOne={options.optionLetter}\n                letterPlayTwo={options.optionLetter === \"X\" ? \"O\" : \"X\"}\n                setPoints={this.setPoints}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../assets/style.css\";\nimport { Header } from \"./Header\";\nimport Board from \"./Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/188169.c1bf471f.svg\";"],"sourceRoot":""}